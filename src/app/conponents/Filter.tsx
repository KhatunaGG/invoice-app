'use client'
import { useContext, useEffect, useState } from "react";
import { GlobalContext } from "../Context";
import datajson from '../data.json'



const Filter = () => {

  const contex = useContext(GlobalContext)
  if (!contex) return null
  const {
    data,
    isMobile,
    statusDropdown,
    setStatusDropdown,
    setCheckBox,
    setIsChecked,
    checkBox,
    isChecked,
    handleCheckBox,
    length,
    status,
    setData,
    setLength,
    newInvoicePage, 
    setNewInvoicePage,
    generateRandomID
  } = contex;





  return (
    <div className="w-full flex flex-row items-center justify-between lg:min-w-[730px] ">
      <div className="flex flex-col gap-y-[3px]">
        {/* <img className='w-[79px] h-[22px] md:w-[119px] md:h-[33px]' src="/assets/Invoices.svg" alt="" /> */}
        <svg

          width="116"
          height="26"
          viewBox="0 0 116 26"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className="cursor-pointer"
        >
          <path
            d="M0.692 1.24H6.074V25H0.692V1.24ZM19.2953 9.79C20.3273 9.79 21.3353 10 22.3193 10.42C23.3033 10.84 24.1133 11.506 24.7493 12.418C25.3853 13.318 25.7033 14.506 25.7033 15.982V25H20.2133V16.882C20.2133 15.826 19.9613 15.034 19.4573 14.506C18.9533 13.966 18.2933 13.696 17.4773 13.696C16.9373 13.696 16.4273 13.84 15.9473 14.128C15.4793 14.404 15.0953 14.8 14.7953 15.316C14.5073 15.82 14.3633 16.402 14.3633 17.062V25H8.89128V10.222H14.3633V12.4C14.5073 12.004 14.8073 11.608 15.2633 11.212C15.7313 10.804 16.3133 10.468 17.0093 10.204C17.7173 9.928 18.4793 9.79 19.2953 9.79ZM26.4261 10.222H32.2761L35.8401 20.032L39.4221 10.222H45.2361L39.0441 25H32.6361L26.4261 10.222ZM53.8446 25.432C52.2246 25.432 50.7846 25.102 49.5246 24.442C48.2766 23.77 47.2926 22.852 46.5726 21.688C45.8646 20.512 45.5106 19.168 45.5106 17.656C45.5106 16.144 45.8646 14.8 46.5726 13.624C47.2926 12.436 48.2766 11.5 49.5246 10.816C50.7846 10.132 52.2246 9.79 53.8446 9.79C55.4646 9.79 56.8926 10.132 58.1286 10.816C59.3646 11.5 60.3306 12.436 61.0266 13.624C61.7226 14.8 62.0706 16.144 62.0706 17.656C62.0706 19.168 61.7226 20.512 61.0266 21.688C60.3306 22.852 59.3646 23.77 58.1286 24.442C56.8926 25.102 55.4646 25.432 53.8446 25.432ZM53.8446 20.932C54.4686 20.932 55.0086 20.794 55.4646 20.518C55.9206 20.242 56.2746 19.852 56.5266 19.348C56.7786 18.844 56.9046 18.274 56.9046 17.638C56.9046 16.99 56.7786 16.414 56.5266 15.91C56.2746 15.406 55.9206 15.01 55.4646 14.722C55.0086 14.434 54.4686 14.29 53.8446 14.29C53.2206 14.29 52.6746 14.434 52.2066 14.722C51.7506 15.01 51.3906 15.406 51.1266 15.91C50.8746 16.414 50.7486 16.99 50.7486 17.638C50.7486 18.274 50.8746 18.844 51.1266 19.348C51.3906 19.852 51.7506 20.242 52.2066 20.518C52.6746 20.794 53.2206 20.932 53.8446 20.932ZM63.9733 25V10.222H69.4453V25H63.9733ZM66.7812 7.18C65.9173 7.18 65.1853 6.88 64.5853 6.28C63.9853 5.668 63.6853 4.942 63.6853 4.102C63.6853 3.262 63.9853 2.536 64.5853 1.924C65.1973 1.3 65.9293 0.987998 66.7812 0.987998C67.3453 0.987998 67.8613 1.132 68.3293 1.42C68.7973 1.696 69.1753 2.068 69.4633 2.536C69.7513 3.004 69.8953 3.526 69.8953 4.102C69.8953 4.942 69.5893 5.668 68.9773 6.28C68.3653 6.88 67.6333 7.18 66.7812 7.18ZM80.1001 21.13C80.7841 21.13 81.3481 21.016 81.7921 20.788C82.2361 20.548 82.5361 20.356 82.6921 20.212L85.1941 23.92C85.0021 24.076 84.6721 24.28 84.2041 24.532C83.7361 24.772 83.1481 24.982 82.4401 25.162C81.7441 25.342 80.9461 25.432 80.0461 25.432C78.3541 25.432 76.8661 25.114 75.5821 24.478C74.2981 23.83 73.2961 22.918 72.5761 21.742C71.8681 20.566 71.5141 19.186 71.5141 17.602C71.5141 16.006 71.8681 14.626 72.5761 13.462C73.2961 12.298 74.2981 11.398 75.5821 10.762C76.8661 10.114 78.3541 9.79 80.0461 9.79C80.9341 9.79 81.7261 9.886 82.4221 10.078C83.1301 10.258 83.7241 10.468 84.2041 10.708C84.6841 10.936 85.0201 11.134 85.2121 11.302L82.6561 15.046C82.5721 14.962 82.4161 14.842 82.1881 14.686C81.9721 14.53 81.6901 14.392 81.3421 14.272C80.9941 14.152 80.5801 14.092 80.1001 14.092C79.5121 14.092 78.9601 14.242 78.4441 14.542C77.9401 14.842 77.5321 15.256 77.2201 15.784C76.9081 16.312 76.7521 16.918 76.7521 17.602C76.7521 18.286 76.9081 18.898 77.2201 19.438C77.5321 19.966 77.9401 20.38 78.4441 20.68C78.9601 20.98 79.5121 21.13 80.1001 21.13ZM90.6493 18.772C90.6853 19.3 90.8533 19.768 91.1533 20.176C91.4533 20.584 91.8673 20.908 92.3953 21.148C92.9353 21.376 93.5713 21.49 94.3033 21.49C94.9993 21.49 95.6233 21.418 96.1753 21.274C96.7393 21.13 97.2253 20.95 97.6333 20.734C98.0533 20.518 98.3773 20.296 98.6053 20.068L100.729 23.452C100.429 23.776 100.003 24.094 99.4513 24.406C98.9113 24.706 98.1973 24.952 97.3093 25.144C96.4213 25.336 95.2993 25.432 93.9433 25.432C92.3113 25.432 90.8593 25.126 89.5873 24.514C88.3153 23.902 87.3133 23.002 86.5813 21.814C85.8493 20.626 85.4833 19.174 85.4833 17.458C85.4833 16.018 85.7953 14.722 86.4193 13.57C87.0553 12.406 87.9733 11.488 89.1733 10.816C90.3733 10.132 91.8193 9.79 93.5113 9.79C95.1193 9.79 96.5113 10.084 97.6873 10.672C98.8753 11.26 99.7873 12.136 100.423 13.3C101.071 14.452 101.395 15.892 101.395 17.62C101.395 17.716 101.389 17.908 101.377 18.196C101.377 18.484 101.365 18.676 101.341 18.772H90.6493ZM96.2473 15.91C96.2353 15.526 96.1333 15.148 95.9413 14.776C95.7493 14.392 95.4613 14.08 95.0773 13.84C94.6933 13.588 94.2013 13.462 93.6013 13.462C93.0013 13.462 92.4913 13.582 92.0713 13.822C91.6633 14.05 91.3513 14.35 91.1353 14.722C90.9193 15.094 90.7993 15.49 90.7753 15.91H96.2473ZM109.722 9.79C110.694 9.79 111.582 9.874 112.386 10.042C113.19 10.198 113.862 10.378 114.402 10.582C114.954 10.786 115.308 10.954 115.464 11.086L113.682 14.308C113.454 14.14 113.028 13.924 112.404 13.66C111.792 13.396 111.108 13.264 110.352 13.264C109.776 13.264 109.29 13.354 108.894 13.534C108.498 13.702 108.3 13.972 108.3 14.344C108.3 14.716 108.516 15.016 108.948 15.244C109.392 15.46 110.028 15.652 110.856 15.82C111.576 15.964 112.308 16.192 113.052 16.504C113.796 16.816 114.414 17.278 114.906 17.89C115.41 18.49 115.662 19.294 115.662 20.302C115.662 21.334 115.44 22.186 114.996 22.858C114.552 23.53 113.964 24.052 113.232 24.424C112.5 24.796 111.708 25.054 110.856 25.198C110.004 25.354 109.176 25.432 108.372 25.432C107.244 25.432 106.26 25.33 105.42 25.126C104.592 24.922 103.92 24.688 103.404 24.424C102.888 24.16 102.528 23.95 102.324 23.794L104.088 20.194C104.4 20.458 104.91 20.758 105.618 21.094C106.326 21.418 107.076 21.58 107.868 21.58C108.636 21.58 109.23 21.466 109.65 21.238C110.07 21.01 110.28 20.71 110.28 20.338C110.28 20.038 110.178 19.798 109.974 19.618C109.77 19.438 109.482 19.282 109.11 19.15C108.738 19.018 108.288 18.898 107.76 18.79C107.28 18.694 106.77 18.544 106.23 18.34C105.69 18.136 105.18 17.86 104.7 17.512C104.22 17.152 103.83 16.702 103.53 16.162C103.23 15.622 103.08 14.968 103.08 14.2C103.08 13.216 103.398 12.4 104.034 11.752C104.67 11.104 105.492 10.618 106.5 10.294C107.508 9.958 108.582 9.79 109.722 9.79Z"
            // fill="white"
            fill="black"
          />
        </svg>

        <p className="text-[13px] leading-[1.15] tracking-[-0.1px] text-[#888EB0]">
          {/* {isMobile ? `${length} invoices` : `There are ${length} total invoices`} */}
          {isMobile
            ? `${length} invoices`
            : `There are ${length} ${status !== '' ? status : 'total'} invoices`}
        </p>
      </div>

      <div className="flex flex-row items-center justify-between gap-x-[18.54px] md:gap-x-[40.54px]">
        <div>


          <div className=" flex flex-row items-center gap-x-[14px]">

            <div className="text-[15px] leading-[1] tracking-[-0.25px] relative font-bold">
              {isMobile ? 'Filter' : 'Filter by status'}

              {/* <div className=" absolute top-[30px] left-[-30px] bg-white shadow-lg w-[170px] rounded-[8px] pl-6 py-6 flex flex-col gap-[15px]"> */}
              <div className={`${!statusDropdown ? 'hidden' : 'visible'} transition-all duration-300 absolute top-[30px] left-[-30px] bg-white shadow-lg w-[170px] rounded-[8px] pl-6 py-6 flex flex-col gap-[15px]`}>
                <div className="flex flex-row items-center gap-x-[13px] cursor-pointer">
                  <input
                    onChange={() => {
                      setCheckBox(1);
                      setIsChecked(1 === checkBox ? !isChecked : true);
                      handleCheckBox("draft")
                    }}

                    checked={checkBox === 1}
                    className="w-4 h-4" type="checkbox" name="draft" id="" />
                  <p className="capitalize">draft</p>
                </div>

                <div className="flex flex-row items-center gap-x-[13px] cursor-pointer">
                  <input
                    onChange={() => {
                      setCheckBox(2);
                      setIsChecked(2 === checkBox ? !isChecked : true);
                      handleCheckBox("pending")
                    }}
                    checked={checkBox === 2}


                    className="w-4 h-4" type="checkbox" name="pending" id="" />
                  <p className="capitalize">pending</p>
                </div>

                <div className="flex flex-row items-center gap-x-[13px] cursor-pointer">
                  <input
                    onChange={() => {
                      setCheckBox(3);
                      setIsChecked(3 === checkBox ? !isChecked : true);
                      handleCheckBox("paid")
                    }}
                    checked={checkBox === 3}



                    className="w-4 h-4" type="checkbox" name="paid" id="" />
                  <p className="capitalize">paid</p>
                </div>


              </div>
            </div>

            <img
              onClick={() => setStatusDropdown(!statusDropdown)}
              style={{ rotate: statusDropdown === true ? '180deg' : '0deg', transition: statusDropdown === true ? '.5s' : '0' }}
              src="/assets/icon-arrow-down.svg" alt="" />
          </div>


        </div>
        <button
          onClick={() => {
            setNewInvoicePage(!newInvoicePage)
            generateRandomID()
          }}

          className="flex flex-row items-center gap-x-2 md:gap-x-4 bg-[#7C5DFA] py-[6px] pl-[6px] pr-[15px] md:py-2 md:pl-[8px] md:pr-[17px] rounded-full">
          <div className="w-[32px] h-[32px] rounded-full bg-white flex items-center justify-center">
            <img src="/assets/icon-plus.svg" alt="" />

          </div>
          <p className="text-white text-[15px] leading-[1] tracking-[-0.25px] font-bold">
            {isMobile ? 'new' : 'New Invoice'}
          </p>


        </button>
      </div>
    </div>
  );
};

export default Filter;
